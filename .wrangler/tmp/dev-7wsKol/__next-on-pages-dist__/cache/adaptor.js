export const SUSPENSE_CACHE_URL="INTERNAL_SUSPENSE_CACHE_HOSTNAME.local";const d="_N_T_",l=new Set;export class CacheAdaptor{constructor(t={}){this.ctx=t}tagsManifest;tagsManifestKey="tags-manifest";async retrieve(t){throw new Error(`Method not implemented - ${t}`)}async update(t,a){throw new Error(`Method not implemented - ${t}, ${a}`)}async set(t,a){const i={lastModified:Date.now(),value:a};switch(await this.update(t,JSON.stringify(i)),i.value?.kind){case"FETCH":{const e=getTagsFromEntry(i);await this.setTags(e,{cacheKey:t});const s=getDerivedTags(e),n=s.map(c=>`${d}${c}`);[...s,...n].forEach(c=>l.delete(c))}}}async get(t,{softTags:a}){const i=await this.retrieve(t);if(!i)return null;let e;try{e=JSON.parse(i)}catch{return null}switch(e.value?.kind){case"FETCH":{await this.loadTagsManifest();const s=getTagsFromEntry(e);return(a?[...s,...a]:getDerivedTags(s)).some(o=>{if(l.has(o))return!0;const g=this.tagsManifest?.items?.[o];return g?.revalidatedAt&&g?.revalidatedAt>=(e.lastModified??Date.now())})?null:e}default:return e}}async revalidateTag(t){await this.setTags([t],{revalidatedAt:Date.now()}),l.add(t)}async loadTagsManifest(){try{const t=await this.retrieve(this.tagsManifestKey);t&&(this.tagsManifest=JSON.parse(t))}catch{}this.tagsManifest??={version:1,items:{}}}async saveTagsManifest(){if(this.tagsManifest){const t=JSON.stringify(this.tagsManifest);await this.update(this.tagsManifestKey,t)}}async setTags(t,{cacheKey:a,revalidatedAt:i}){await this.loadTagsManifest();const e=this.tagsManifest;for(const s of t){const n=e.items[s]??{keys:[]};a&&!n.keys.includes(a)&&n.keys.push(a),i&&(n.revalidatedAt=i),e.items[s]=n}await this.saveTagsManifest()}buildCacheKey(t){return`https://${SUSPENSE_CACHE_URL}/entry/${t}`}}export function getDerivedTags(r){const t=["/"];for(const a of r||[])if(a.startsWith("/")){const i=a.split("/");for(let e=1;e<i.length+1;e++){const s=i.slice(0,e).join("/");s&&(t.push(s),t.includes(s)||t.push(s))}}else t.includes(a)||t.push(a);return t}export function getTagsFromEntry(r){return r.value?.tags??r.value?.data?.tags??[]}
